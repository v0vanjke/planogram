<script setup>
import { ref, onMounted, computed, reactive } from 'vue';
import { GridHelper } from 'three';
import {
  Group,
  PerspectiveCamera,
  Camera,
  PhysicalMaterial,
  DirectionalLight,
  Sphere,
  HemisphereLight,
  PointLight,
  Renderer,
  PhongMaterial,
  Plane,
  Scene,
} from 'troisjs';
import Box from '@/components/Box';
import { useApiStore } from '@/store/api';
import { useAppStore } from '@/store/app';
const apiStore = useApiStore()
const appStore = useAppStore()


const renderer = ref(null)
const scene = ref(null)

const move_box = (boxID) => {
}


onMounted(() => {
  const grid = new GridHelper(300, 30, "hsl(120, 100%, 80%)", "hsl(0, 1%, 92%)");
  grid.material.opacity = 0.9;
  grid.material.transparent = true;
  scene.value.add(grid);

  // const orbitCtrl = renderer.value.three.cameraCtrl
// console.log(orbitCtrl)
// orbitCtrl.enableRotate = false;

  const pointerV3 = renderer.value.three.pointer.positionV3
  appStore.renderer.value.onBeforeRender(() => {
   console.log('hmmmmmm')
   // console.log(appStore.renderer)
   // console.log(appStore.renderer.value.three.cameraCtrl)
   // appStore.positionV3 = renderer.value.three.pointer.positionV3
 })
})

const click_test = () => {
  console.log('click test')
}

const onPointerOver = (event) => {
  console.log(event)
}

</script>
<template>
  <Renderer
    ref="renderer.value"
    antialias
    pointer
    resize
    shadow
    :orbit-ctrl="appStore.orbCtrl"
  >
    <Camera :position="{ x: 0, y: 300, z: 0 }" />

    <Scene ref="scene" background="hsl(0, 0%, 30%)">
      <HemisphereLight />
      <DirectionalLight cast-shadow :position="{ x: 500, y: 700, z: 300 }" />
      <Group :rotation="{ x: -Math.PI / 2 }">
          <Box v-for="v, boxID in apiStore.boxes" :key="boxID" :boxID="boxID"/>
      </Group>
      <Plane :width="300" :height="300" :rotation="{ x: -Math.PI / 2 }" receive-shadow>
        <PhongMaterial color="#999999" :props="{ depthWrite: false }" />
      </Plane>
    </Scene>
  </Renderer>
  <v-card class="helperCard">
    <v-btn text color="grey" @click="apiStore.addBox">
      add box
    </v-btn>
    enableRotate:
    {{appStore.orbCtrl.enableRotate}}
    <br>
    appStore renderer:
    {{appStore.renderer}}
    <br>
    local renderer:
    <div v-if="renderer && renderer.value">
      {{renderer.value.three.pointer.positionV3}}
    </div>
  </v-card>
</template>

<style scoped>
.helperCard {
  position: absolute;
  top: 20px;
  right: 30px;
  margin-left: 30px;
  padding: 10px;
}
</style>