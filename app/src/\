<script setup>
import { computed, ref, watch, reactive, onMounted, onActivated } from 'vue';
import { RepeatWrapping } from 'three';
import {
  AmbientLight,
  Camera,
  EffectComposer,
  FXAAPass,
  Group,
  Renderer,
  Plane,
  Box,
  PointLight,
  RectAreaLight,
  RenderPass,
  Scene,
  Sphere,
  StandardMaterial,
  Texture,
  UnrealBloomPass,
} from 'troisjs';

const texturesProps = {
        repeat: { x: 10, y: 10 },
        wrapS: RepeatWrapping,
        wrapT: RepeatWrapping,
      }

const rectLightsProps = {
        // rotation: { x: -Math.PI / 2 },
        lookAt: { x: 0, y: 0, z: 1 },
        intensity: 5,
        width: 5,
        height: 5,
        helper: true,
      }

const renderer = ref(0)
const light = ref(0)
// const pointer = ref()

const test = computed(() => {
  if (!renderer.value) {
    return 'nothing'
  }
  console.log(renderer.value)
  return renderer.value.$pointer

})

onMounted(() => {
  // renderer.value.onBeforeRender(() => {
    // console.log(renderer.value.three.pointer.positionV3)
    // console.log(light.value)
    // console.log(renderer.value.three.pointer.positionV3)
    // light.value.light.position.copy(pointerV3);
  // });
})

</script>

<template>
  <v-card height=1000>
    <Renderer ref="renderer" resize antialias :orbit-ctrl="{ autoRotate: false, enableDamping: true, dampingFactor: 0.05 }" >
      <Camera :position="{ x: 0, y: 0, z: 10 }" />
      <Scene background="#000000" >
        <!-- <AmbientLight color="red" /> -->
        <PointLight ref="light" :intensity="0.5" :position="{ x: 0, y: 0, z: 0 }">
          <Sphere :radius="0.1" />
        </PointLight>
        <Group :rotation="{ x: -Math.PI / 2, y: 0, z: 0 }">
          <Box :position="{ x: 0, y: 10, z: 1 }" />
          <RectAreaLight color="#0060ff" :position="{ x: 10, y: 0, z: 1 }" v-bind="rectLightsProps" />
          <RectAreaLight color="#60ff60" :position="{ x: -10, y: 0, z: 1 }" v-bind="rectLightsProps" />
          <RectAreaLight color="orange" :position="{ x: 0, y: -10, z: 1 }" v-bind="rectLightsProps" />
          <Plane :width="30" :height="30" :rotation="{ x: 0 }" :position="{ z: -3 }">
            <StandardMaterial :props="{ displacementScale: 0.2, roughness: 0, metalness: 0 }"  >
              <Texture :props="texturesProps" src="https://troisjs.github.io/assets/textures/Wood_Tiles_002_basecolor.jpg" />
              <Texture :props="texturesProps" src="https://troisjs.github.io/assets/textures/Wood_Tiles_002_height.png" name="displacementMap" />
              <Texture :props="texturesProps" src="https://troisjs.github.io/assets/textures/Wood_Tiles_002_normal.jpg" name="normalMap" />
              <Texture :props="texturesProps" src="https://troisjs.github.io/assets/textures/Wood_Tiles_002_roughness.jpg" name="roughnessMap" />
              <Texture :props="texturesProps" src="https://troisjs.github.io/assets/textures/Wood_Tiles_002_ambientOcclusion.jpg" name="aoMap" />
            </StandardMaterial>
          </Plane>
        </Group>
      </Scene>
      <EffectComposer>
        <RenderPass />
        <UnrealBloomPass :strength="0.5" />
        <FXAAPass />
      </EffectComposer>
    </Renderer>
  </v-card>
  <v-card>
    {{test}}
  </v-card>
</template>
